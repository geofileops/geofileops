# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Tests

on:
  push:
    branches: [ main, v0.** ]
  pull_request:
    branches: [ main, v0.** ]
    paths-ignore:
      - "benchmark/**"
      - "docs/**"
      - "perftests/**"
      - ".github/workflows/tests_installed.yml"
      - ".github/workflows/perftests.yml"
      - "*.md"
      - "*.yml"
  schedule:
    # every Wednesday at 3:40 AM
    - cron: "40 3 * * 3"

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  Test:
    name: ${{ matrix.env }}, python ${{ matrix.python }}, ${{ matrix.os }}
    timeout-minutes: 30
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        dev: [false]
        python: ["3.10", "3.11", "3.12", "3.13"]
        env: ["latest"]
        # Use openblas instead of mkl saves 600 MB. Linux OK, 50% slower on Windows and OSX!
        extra: ["nomkl"]
        include:
          - env: nightly-deps
            os: ubuntu-latest
            dev: false
            python: "3.12"
          - env: minimal
            os: ubuntu-latest
            dev: false
            python: "3.10"
          - env: latest-fiona
            os: windows-latest
            dev: false
            python: "3.12"
          - env: latest
            os: macos-latest
            dev: false
            python: "3.12"
            
    steps:
      - uses: actions/checkout@v4

      - name: Install Conda environment with Micromamba
        uses: mamba-org/setup-micromamba@v2
        with:
          micromamba-version: '1.5.1-0'
          environment-file: ci/envs/${{ matrix.env }}.yml
          create-args: >-
            python=${{ matrix.python }}
            ${{ matrix.extra }}
        
      - name: Test
        run: >-
          pytest
          --numprocesses 4 --color=yes 
          --cov=geofileops --cov-append --cov-report term-missing --cov-report 
          xml tests/

      - uses: codecov/codecov-action@v5
      
